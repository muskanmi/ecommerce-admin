generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model Store {
  id        String      @id @map("_id") @default(auto()) @db.ObjectId
  name      String
  userId    String
  billboards Billboard[] @relation("StoreToBillboard")
  categories Category[] @relation("StoreToCategory")
  sizes      Size[] @relation("StoreToSize")
  colors     Color[] @relation("StoreToColor")
  createdAt DateTime    @default(now())
  updatedAt DateTime    @updatedAt

  @@map("stores")
}

model Billboard {
  id        String   @id @map("_id") @default(auto()) @db.ObjectId
  storeId   String
  store     Store    @relation("StoreToBillboard", fields: [storeId], references: [id])
  label     String
  imageUrl  String
  categories Category[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([storeId])
}

model Category {
    id        String   @id @map("_id") @default(auto()) @db.ObjectId
    storeId   String
    store     Store    @relation("StoreToCategory", fields: [storeId], references: [id])
    billboardId String
    billboard Billboard @relation(fields: [billboardId], references: [id])
    name      String
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    @@index([storeId])
    @@index([billboardId])
}

model Size {
      id        String   @id @map("_id") @default(auto()) @db.ObjectId
      storeId   String
      store     Store @relation("StoreToSize", fields: [storeId], references: [id])
      name      String
      value     String
      createdAt DateTime @default(now())
      updatedAt DateTime @updatedAt

      @@index([storeId])
}

model Color {
      id        String   @id @map("_id") @default(auto()) @db.ObjectId
      storeId   String
      store     Store @relation("StoreToColor", fields: [storeId], references: [id])
      name      String
      value     String
      createdAt DateTime @default(now())
      updatedAt DateTime @updatedAt

      @@index([storeId])
}
